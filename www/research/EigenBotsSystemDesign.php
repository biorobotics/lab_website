<?php include $_SERVER['DOCUMENT_ROOT'].'/phpincludes/header.php'; ?>

<!-- Basic Page Needs - Edit keywords and page title here
============================= -->
	<title>EigenBots System Design - Biorobotics</title>
	<meta name="Keywords" content="Carnegie Mellon University, robotics, Modular Robotics">
	<meta name="description" content ="EigenBots System Design - Carnegie Mellon Biorobotics" /><!-- Banner and Menu - Do not change
============================= -->
<?php include $_SERVER['DOCUMENT_ROOT']."/phpincludes/banner.php";?>

<!-- Content - Add content for your page here
============================= -->
    
	<div class="row"><h3 class="c86" id="h.lizm8yedd46j"><b><span class="c15">Modular Robotics</b> - EigenBots System Design</span></h3><p class="c71"><span class="c5">Modular components need to be developed for both hardware and software modularity. Over the past few years we have been developing systems made of multiple modules that could be replicated to expand or modify an existing robot. We had to develop a full menu of components that work together and allow field technicians and end consumers to assemble components to build a custom modular robot. This approach lets users build robots to meet their needs and the environment; and does not force them to work around the robot. </span></p><p class="c51 c71"><span class="c5"></span></p><p class="c18"><span class="c5">In this project, we have begun to ask ourselves: what are the core components that make up a modular robot system? For these core components, how is information shared among them and what level of abstraction do they require. These core components we call Eigenbots, the moral analogy to Eigen vectors in a standard PCA decomposition. As a first step toward determining the Eigen basis for Eigenbots, we started to build a system that leverages our group&#39;s experience with embedded electronics design and software development for miniaturized mechatronic and robotic systems that directly interact with the physical worlds. </span></p><p class="c18"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 316.50px; height: 314.28px;"><img alt="" src="images/EigenBotsSystemDesign/image1.png" style="width: 316.50px; height: 314.28px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c2"><span class="c5"></span></p><p class="c18"><span class="c5">In the EigenBot design, each of the EigenModule includes &nbsp;self-contained sensing, compute, and motor driver printed circuit board design that provides onboard feedback control and motion planning, which we call an EigenBrain. The EigenBrains are naturally designed to enable a distributed system scheme that allows each functioning module to execute and adjust locally. This approach reduces the need for bulky computer hardware, minimizes network load, and eliminates complex cable routing needs for host systems. Embedded control also enables the robot modules to interface with conventional robotic software architectures, so that the EigenBot only requires high-level commands such as motion primitives, but is capable of handling the motor and motion control behind the scenes.</span></p><p class="c2"><span class="c5"></span></p><p class="c18"><span class="c5">The EigenBot design also follows a modular system architecture approach for custom-designed electronics. Which enables component-sharing and subassembly-swapping capabilities for the EigenBot robotic systems. At the component level, there will be generic embedded computing (EigenBrain), sensor and actuation subassemblies to be reused without major hardware redesign, and at system level, EigenModules can be interchanged and swapped based on the need of the application. Each of the subassemblies and subsystem modules will be connected via a power and data bus using a standardized mechanical and electrical interface that allows flexible network topology, and a variety of robot configurations. </span></p><p class="c2"><span class="c5"></span></p><p class="c18"><span class="c5">We designed a set of robotic modules that can be rearranged into a wide range of designs for mobile manipulation. The modules include actuated joints, static links, a body, and end effectors. All modules use the same custom microcontroller and interfaces, and are made mainly from 3D printed PLA and aluminum. Actuated modules contain a Dynamixel actuator. The interfaces were designed to be assembled toollessly, while still bearing enough loading to support the weight of a walking robot design or a cantilevered manipulator. Each interface input has eight contact pads, and the module detects which of these pads is in contact with the output pins of a connected module. </span></p><p class="c71 c51"><span class="c5"></span></p><p class="c48"><span class="c16 c42 c13 c36"></span></p><p class="c73"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 350.40px; height: 240.00px;"><img alt="" src="images/EigenBotsSystemDesign/image18.png" style="width: 350.40px; height: 240.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c73"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 427.20px; height: 240.00px;"><img alt="" src="images/EigenBotsSystemDesign/image49.png" style="width: 427.20px; height: 240.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c73"><span class="c16 c42 c13 c36">Figure. The Series-elastic actuated (SEA) Modular robot system developed by CMU Biorobotics Lab. These modules can be combined to form snakes, arms, and legs.</span></p><hr style="page-break-before:always;display:none;"><p class="c48"><span class="c16 c42 c13 c36"></span></p><p class="c10"><span class="c29"><a class="c24" href="#h.jpmbcvqkcs3b">[Home]</a></span></p><!-- <div class="six columns">
			<h3><b>Modularity</b> - Modular manipulators</h3>
			<p>
				<b>Modular robotic systems</b> have the potential to be adapted to varying tasks using a single set of reconfigurable hardware, enabling customizable robots to be developed faster and more economically than conventional robots. Currently, even with the engineering experience, calculations and intuitions, it is not immediately evident how to construct and program a modular robot for a task. We research methods to automatically synthesize the design and controllers for modular robot arms.
			</p>
			<div class="eleven columns u-pull-left">
				<img src="images/Modularity/fig2.png" alt="ModularityF2" width="100%;" style="padding-left:1rem;">
				<p class="caption"> Figure2 : A prototype of a robot arm made from HEBI modular actuators.
				</p>
		</div>
		</div>
		<div class="five columns u-pull-right">
			<img src="images/Modularity/fig1.png" alt="ModularityF1" width="100%;" style="padding-left:1rem;">
			<p class="caption"> Figure 1:  Supernumerary arm implemented in hardware, reaching  one  of  the  targets  on  the  overhead  workpiece.  The  end
			effector  is  a  flat  rubberized  plate  with  spring-loaded  hinge.
			The  arm,  attached  to  a  backpack  control  and  power  pack,
			lends the user a helping hand
			</p>
		</div> -->
	</div>
<!-- Gallery - include if page has gallery elements
============================= -->
<?php include $_SERVER['DOCUMENT_ROOT']."/phpincludes/gallery.php";?>

<!-- Footer - Do not change
============================= -->
<?php include $_SERVER['DOCUMENT_ROOT']."/phpincludes/footer.php";?>